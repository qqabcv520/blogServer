package lol.mifan.myblog.model;

// Generated 2017-4-16 20:16:16 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Article generated by hbm2java
 */
@Entity
@Table(name = "article", catalog = "myblog")
public class Article implements java.io.Serializable {

	private Integer id;
	private Users users;
	private String title;
	private String content;
	private boolean deleted;
	private Date createTime;
	private int sort;
	private int clickCnt;
	private String reprintedFrom;
	private String outline;
	private String titleImg;
	private Set<Tag> tags = new HashSet<Tag>(0);

	public Article() {
	}

	public Article(boolean deleted, int sort, int clickCnt) {
		this.deleted = deleted;
		this.sort = sort;
		this.clickCnt = clickCnt;
	}

	public Article(Users users, String title, String content, boolean deleted,
			Date createTime, int sort, int clickCnt, String reprintedFrom,
			String outline, String titleImg, Set<Tag> tags) {
		this.users = users;
		this.title = title;
		this.content = content;
		this.deleted = deleted;
		this.createTime = createTime;
		this.sort = sort;
		this.clickCnt = clickCnt;
		this.reprintedFrom = reprintedFrom;
		this.outline = outline;
		this.titleImg = titleImg;
		this.tags = tags;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author")
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "title")
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "content")
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "deleted", nullable = false)
	public boolean isDeleted() {
		return this.deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "sort", nullable = false)
	public int getSort() {
		return this.sort;
	}

	public void setSort(int sort) {
		this.sort = sort;
	}

	@Column(name = "click_cnt", nullable = false)
	public int getClickCnt() {
		return this.clickCnt;
	}

	public void setClickCnt(int clickCnt) {
		this.clickCnt = clickCnt;
	}

	@Column(name = "reprinted_from")
	public String getReprintedFrom() {
		return this.reprintedFrom;
	}

	public void setReprintedFrom(String reprintedFrom) {
		this.reprintedFrom = reprintedFrom;
	}

	@Column(name = "outline")
	public String getOutline() {
		return this.outline;
	}

	public void setOutline(String outline) {
		this.outline = outline;
	}

	@Column(name = "title_img")
	public String getTitleImg() {
		return this.titleImg;
	}

	public void setTitleImg(String titleImg) {
		this.titleImg = titleImg;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "articletag", catalog = "myblog", joinColumns = { @JoinColumn(name = "article_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "tag_id", nullable = false, updatable = false) })
	public Set<Tag> getTags() {
		return this.tags;
	}

	public void setTags(Set<Tag> tags) {
		this.tags = tags;
	}

}
